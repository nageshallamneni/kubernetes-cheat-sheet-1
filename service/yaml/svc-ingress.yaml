# Create deploymennt
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deploy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-deploy
  template:
    metadata:
      labels:
        app: nginx-deploy
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deploy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tomcat-deploy
  template:
    metadata:
      labels:
        app: tomcat-deploy
    spec:
      containers:
      - name: tomcat
        image: tomcat:alpine
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
---
# create service 
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx-deploy
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-service
spec:
  selector:
    app: tomcat-deploy
  ports:
  - port: 80
    targetPort: 8080
---
# Create ingress rule
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web-service-ingress  
spec:
  rules:
  - host: nginx.dimasrio.com
    http:
      paths:
      - backend:
          serviceName: nginx-service
          servicePort: 80
  - host: tomcat.dimasrio.com
    http:
      paths:
      - backend:
          serviceName: tomcat-service
          servicePort: 80